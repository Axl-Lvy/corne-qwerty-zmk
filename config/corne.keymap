/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        kp_to_layer: kp_to_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_TO_LAYER";
            bindings = <&kp>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB         &kp Q  &kp W  &kp E      &kp R               &kp T                   &kp Y  &kp U          &kp I                      &kp O    &kp P     &kp BACKSPACE
&kp LEFT_GUI    &kp A  &kp S  &kp D      &kp F               &kp G                   &kp H  &kp J          &kp K                      &kp L    &kp SEMI  &kp ENTER
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C      &kp V               &kp B                   &kp N  &kp M          &kp COMMA                  &kp DOT  &kp FSLH  &kp ESCAPE
                              &kp LCTRL  &mt LEFT_ALT SPACE  &mt LC(LEFT_ALT) DEL    &mo 1  &kp RIGHT_ALT  &kp_to_layer LEFT_SHIFT 2
            >;
        };

        Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1          &kp F2            &kp F3    &kp F4             &kp F5              &kp F6        &kp F7    &kp F8         &kp F9            &kp F10    &kp F11   &kp F12
&kp CAPSLOCK    &kp C_PLAY_PAUSE  &mkp MB4  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &kp C_NEXT    &kp LEFT  &kp DOWN       &kp UP            &kp RIGHT  &trans    &trans
&kp LEFT_SHIFT  &trans            &mkp MB5  &kp INS            &kp PRINTSCREEN     &kp K_MENU    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP       &kp END    &mkp MB1  &kp LEFT_SHIFT
                                            &kp LCTRL          &mt LEFT_ALT SPACE  &trans        &trans    &trans         &kp LC(LEFT_ALT)
            >;
        };

        Num {
            bindings = <
&kp TAB         &trans        &trans        &trans        &trans              &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &kp BACKSPACE
&kp LEFT_GUI    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4        &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp ENTER
&kp LEFT_SHIFT  &trans        &trans        &kp SPACE     &kp KP_SLASH        &trans          &trans        &trans        &trans        &trans        &trans        &trans
                                            &kp LCTRL     &mt LEFT_ALT SPACE  &trans          &mo 1         &trans        &trans
            >;
        };
    };
};
