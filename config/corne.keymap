/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp CAPSLOCK  &kp Q  &kp W  &kp E             &kp R        &kp T                     &kp Y            &kp U                &kp I         &kp O    &kp P     &kp LEFT_ALT
&kp TAB       &kp A  &kp S  &kp D             &kp F        &kp G                     &kp H            &kp J                &kp K         &kp L    &kp SEMI  &kp ENTER
&kp LEFT_GUI  &kp Z  &kp X  &kp C             &kp V        &kp B                     &kp N            &kp M                &kp COMMA     &kp DOT  &kp FSLH  &mo 3
                            &mt LCTRL DELETE  &lt 1 SPACE  &mt LEFT_ALT BACKSPACE    &kp RIGHT_SHIFT  &mt RIGHT_ALT SPACE  &lt 2 ESCAPE
            >;
        };

        Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp KP_DIVIDE  &kp N1     &kp N2    &kp N3       &kp N4         &kp N5     &kp N6           &kp N7               &kp N8            &kp N9     &kp N0            &kp LEFT_ALT
&kp N          &kp LS(N)  &kp HOME  &kp PAGE_UP  &kp PAGE_DOWN  &kp END    &kp LEFT         &kp DOWN             &kp UP            &kp RIGHT  &kp C_PLAY_PAUSE  &kp C_NEXT
&kp F1         &kp F2     &kp F3    &kp F4       &kp F5         &kp F6     &kp F7           &kp F8               &kp F9            &kp F10    &kp F11           &kp F12
                                    &trans       &trans         &trans     &kp RIGHT_SHIFT  &mt RIGHT_ALT SPACE  &mt RCTRL ESCAPE
            >;
        };

        Num {
            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(N)      &kp LC(BACKSPACE)    &kp LCTRL     &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1      &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4   &kp NUMBER_5         &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp C_PREV
&trans  &trans            &trans            &kp N             &kp KP_SLASH   &trans               &trans        &trans        &trans        &trans        &trans        &trans
                                            &trans            &kp LS(SPACE)  &trans               &trans        &trans        &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans        &trans        &trans        &trans        &trans          &bt BT_CLR  &trans             &trans           &trans      &trans  &trans
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &trans  &kp C_PREV
&trans  &trans        &trans        &trans        &trans        &trans          &trans      &kp PRINTSCREEN    &kp INSERT       &trans      &trans  &trans
                                    &trans        &trans        &trans          &trans      &trans             &trans
            >;
        };
    };
};
